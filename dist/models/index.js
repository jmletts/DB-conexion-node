"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Review = exports.OrderProduct = exports.Order = exports.ProductCategory = exports.Category = exports.Product = exports.Company = exports.User = exports.sequelize = void 0;
const connection_1 = __importDefault(require("../database/connection"));
exports.sequelize = connection_1.default;
const user_1 = require("./user");
Object.defineProperty(exports, "User", { enumerable: true, get: function () { return user_1.User; } });
const company_1 = require("./company");
Object.defineProperty(exports, "Company", { enumerable: true, get: function () { return company_1.Company; } });
const products_1 = require("./products");
Object.defineProperty(exports, "Product", { enumerable: true, get: function () { return products_1.Product; } });
const category_1 = require("./category");
Object.defineProperty(exports, "Category", { enumerable: true, get: function () { return category_1.Category; } });
const productCategory_1 = require("./productCategory");
Object.defineProperty(exports, "ProductCategory", { enumerable: true, get: function () { return productCategory_1.ProductCategory; } });
const order_1 = require("./order");
Object.defineProperty(exports, "Order", { enumerable: true, get: function () { return order_1.Order; } });
const orderProduct_1 = require("./orderProduct");
Object.defineProperty(exports, "OrderProduct", { enumerable: true, get: function () { return orderProduct_1.OrderProduct; } });
const review_1 = require("./review");
Object.defineProperty(exports, "Review", { enumerable: true, get: function () { return review_1.Review; } });
// Relaciones
user_1.User.hasMany(company_1.Company, { foreignKey: 'Userid' });
company_1.Company.belongsTo(user_1.User, { foreignKey: 'Userid' });
company_1.Company.hasMany(products_1.Product, { foreignKey: 'Companyid' });
products_1.Product.belongsTo(company_1.Company, { foreignKey: 'Companyid' });
products_1.Product.belongsToMany(category_1.Category, { through: productCategory_1.ProductCategory, foreignKey: 'Productid' });
category_1.Category.belongsToMany(products_1.Product, { through: productCategory_1.ProductCategory, foreignKey: 'Categoryid' });
user_1.User.hasMany(order_1.Order, { foreignKey: 'Userid' });
order_1.Order.belongsTo(user_1.User, { foreignKey: 'Userid' });
order_1.Order.belongsToMany(products_1.Product, { through: orderProduct_1.OrderProduct, foreignKey: 'Orderid' });
products_1.Product.belongsToMany(order_1.Order, { through: orderProduct_1.OrderProduct, foreignKey: 'Productid' });
user_1.User.hasMany(review_1.Review, { foreignKey: 'Userid' });
products_1.Product.hasMany(review_1.Review, { foreignKey: 'Productid' });
review_1.Review.belongsTo(user_1.User, { foreignKey: 'Userid' });
review_1.Review.belongsTo(products_1.Product, { foreignKey: 'Productid' });
